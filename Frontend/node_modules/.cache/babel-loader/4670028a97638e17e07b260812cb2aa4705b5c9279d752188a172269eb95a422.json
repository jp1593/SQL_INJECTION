{"ast":null,"code":"var _jsxFileName = \"/home/sir_anon/Desktop/sql_injection/Frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport Secure from \"./Secure\";\nimport Insecure from \"./Insecure\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nfunction App() {\n  _s();\n  const [isSecure, setIsSecure] = useState(false);\n  const handleSecureClick = () => {\n    setIsSecure(true);\n  };\n  const handleInsecureClick = () => {\n    setIsSecure(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [isSecure ? /*#__PURE__*/_jsxDEV(Secure, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Insecure, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \" bg-green-600 text-2xl w-1/2\",\n      onClick: handleSecureClick,\n      children: \"Secure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-red-600 text-2xl\",\n      onClick: handleInsecureClick,\n      children: \"Insecure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QjfDY5wnIXf2mNGTRpvvMBG4hkQ=\");\n_c = App;\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 13\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","Secure","Insecure","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","App","_s","isSecure","setIsSecure","handleSecureClick","handleInsecureClick","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","render","$RefreshReg$"],"sources":["/home/sir_anon/Desktop/sql_injection/Frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport Secure from \"./Secure\";\nimport Insecure from \"./Insecure\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nfunction App() {\n  const [isSecure, setIsSecure] = useState(false);\n\n  const handleSecureClick = () => {\n    setIsSecure(true);\n  };\n\n  const handleInsecureClick = () => {\n    setIsSecure(false);\n  };\n\n  return (\n    <React.StrictMode>\n      {isSecure ? <Secure /> : <Insecure />}\n        <button className=\" bg-green-600 text-2xl w-1/2\" onClick={handleSecureClick}>Secure</button>\n        <button className=\"bg-red-600 text-2xl\" onClick={handleInsecureClick}>Insecure</button>\n    </React.StrictMode>\n  );\n}\n\nroot.render(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCF,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACER,OAAA,CAACP,KAAK,CAACkB,UAAU;IAAAC,QAAA,GACdL,QAAQ,gBAAGP,OAAA,CAACJ,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACH,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnChB,OAAA;MAAQiB,SAAS,EAAC,8BAA8B;MAACC,OAAO,EAAET,iBAAkB;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5FhB,OAAA;MAAQiB,SAAS,EAAC,qBAAqB;MAACC,OAAO,EAAER,mBAAoB;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEvB;AAACV,EAAA,CAlBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBZJ,IAAI,CAACmB,MAAM,eAACpB,OAAA,CAACK,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;;AAEpB;AACA;AACA;AACAlB,eAAe,CAAC,CAAC;AAAC,IAAAqB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}